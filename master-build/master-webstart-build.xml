<?xml version="1.0"?>
<!--Do NOT alter this without discussing it with either Douglas Bullard or Justin Redd or Anil!!        -->

<project name="master-webstart" basedir="../..">
    <!--This file is responsible for the Jboss-specific stuff needed for an Jboss J2EE application-->


    <import file="master-build.xml" />

    <validateProperty propertyName="webstart.dir"/>
    <validateProperty propertyName="lib.dist"/>
    <validateProperty propertyName="webstart.lib.dir"/>

    <target name="distribute" depends="minor,sign"
            description="Create a new distribution of the Webstart app, ready for commit.  Automaticlaly increments build by minor version.  To update by a major version, do a 'build major distribute'"/>


    <target name="sign" depends="jar">
        <copy todir="${webstart.dir}" overwrite="yes">
            <fileset dir="${module.root.dir}/web/"/>
        </copy>
        <copy todir="${webstart.dir}/html" overwrite="yes">
          <fileset dir="${src.dir}/help/html" />
        </copy>
        <copy todir="${webstart.lib.dir}" overwrite="yes">
            <fileset dir="${lib.dist}/">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <signjar jar="${webstart.lib.dir}/*.jar" keypass="${keypass}" keystore="${keystore}" alias="${alias}" storepass="${storepass}"/>
        <copy todir="${webstart.lib.dir}" overwrite="yes">
            <fileset dir="${lib.presigned}/">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>

    <!--	Jar up the app for WebStart-->
    <target name="jar" depends="compile">
        <mkdir dir="${webstart.lib.dir}"/>
        <jar basedir="${compile.out.dir}" destfile="${webstart.dir}/lib/${app.name}.jar"/>
        <jar basedir="${src.dir}/help" destfile="${basedir}/webstart/lib/help.jar"/>
    </target>

    <target name="configure" depends="-init"/>


    <!--For all the version stuff, you need the version_tool jar-->
    <target name="noversion" description="Call this target to do a distribute without changing the version number.  For example, 'build noversion distribute'">
		<echo>We're NOT incremention the major, minor, or point versions for this build.</echo>
		<property name="version.done" value="true"/>
	</target>

	<target name="version-init" depends="-init">
        <taskdef name="versionupdate"
                 classname="com.ryangrier.ant.VersionUpdate"
                 classpath="${lib.build}/version_tool.jar"/>
    </target>

    <macrodef name="updateVersion" description="Updates the version of a file.">
        <attribute name="type" description="Minor, Point, or Major"/>
        <attribute name="versionClass" default="${version.class}" description="Class with the versoin field in it"/>
        <sequential>
            <echo>::target updateVersion
                :::type=@{type}
            </echo>
            <versionupdate srcdir="${java.src.dir}"
                           classname="@{versionClass}"
                           variablename="VERSION"
                           debug="true"
                           versionupdatetype="@{type}">
            </versionupdate>
            <property name="version.done" value="true"/>
        </sequential>
    </macrodef>

    <target name="minor" depends="version-init" unless="version.done" description="Updates a class from version from version 1.0.7 to 1.0.8">
        <updateVersion type="Minor"/>
    </target>

    <target name="point" depends="version-init" unless="version.done" description="Updates a class from version from version 1.0.7 to 1.1.0">
        <updateVersion type="Point"/>
	</target>

	<target name="major" depends="version-init" unless="version.done" description="Updates a class from version from version 1.0.7 to 2.0.0">
        <updateVersion type="Major"/>
	</target>

</project>